do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then local v73=0;while true do if (v73==0) then v19=v0(v3(v20,1,1));return "";end end else local v74=0;local v75;while true do if (v74==0) then v75=v2(v0(v20,16));if v19 then local v99=v5(v75,v19);v19=nil;return v99;else return v75;end break;end end end end);local function v21(v22,v23,v24)if v24 then local v76=0 -0 ;local v77;while true do if (v76==(0 + 0)) then v77=(v22/((679 -(215 + 462))^(v23-(1 + 0))))%(((158 + 24) -(36 + 48 + 96))^(((v24-(1 -(0 + 0))) -(v23-1)) + (1286 -(243 + 1042)))) ;return v77-(v77%((2740 -1593) -(603 + 543))) ;end end else local v78=0;local v79;while true do if (v78==((2142 -703) -(829 + 610))) then v79=2^(v23-(1 -0)) ;return (((v22%(v79 + v79))>=v79) and 1) or (0 -0) ;end end end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39=0 + 0 ;local v40;local v41;while true do if (v39==(0 -0)) then v40,v41=v1(v16,v18,v18 + 2 );v18=v18 + (3 -1) ;v39=(1809 -1173) -((845 -(77 + 174)) + 41) ;end if (v39==(1017 -((1916 -1401) + 501))) then return (v41 * (132 + 124)) + v40 ;end end end local function v27()local v42,v43,v44,v45=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 2 + (1157 -(572 + 583)) ;return (v45 * (16779141 -(984 + 941))) + (v44 * (46137 + 19399)) + (v43 * (1256 -(714 + 286))) + v42 ;end local function v28()local v46=(7397 -5641) -(156 + (1898 -(161 + 137))) ;local v47;local v48;local v49;local v50;local v51;local v52;while true do if (v46==(2 + 1)) then if (v51==(0 -0)) then if (v50==(862 -(470 + 392))) then return v52 * (0 -0) ;else v51=1 -0 ;v49=0 + 0 ;end elseif (v51==(1520 + 527)) then return ((v50==(0 -(0 -0))) and (v52 * ((1 + 0)/(0 + 0)))) or (v52 * NaN) ;end return v8(v52,v51-(86 + 263 + 674) ) * (v49 + (v50/((205 -(31 + 172))^(131 -79)))) ;end if (((2 -1) + 0)==v46) then v49=1 -0 ;v50=(v21(v48,1 + 0 ,59 -39 ) * ((2 + 0)^(38 -6))) + v47 ;v46=1 + 0 + 1 ;end if (v46==(7 -(698 -(373 + 320)))) then v51=v21(v48,2 + 19 ,31 + 0 );v52=((v21(v48,956 -(490 + 434) )==(1 -0)) and  -(1 + 0)) or ((1120 -(330 + 789)) + 0) ;v46=9 -6 ;end if (v46==(0 -0)) then v47=v27();v48=v27();v46=2 -(1 -0) ;end end end local function v29(v30)local v53=(0 + 0) -0 ;local v54;local v55;while true do if (v53==(1189 -(873 + 313))) then return v6(v55);end if (v53==(1 + 1)) then v55={};for v80=1 -0 , #v54 do v55[v80]=v2(v1(v3(v54,v80,v80)));end v53=3;end if (v53==0) then v54=nil;if  not v30 then v30=v27();if (v30==0) then return "";end end v53=1 + 0 ;end if (v53==(1243 -(139 + 1103))) then v54=v3(v16,v18,(v18 + v30) -((5890 -4402) -(705 + 782)) );v18=v18 + v30 ;v53=5 -3 ;end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v56=0 + 0 ;local v57;local v58;local v59;local v60;local v61;local v62;while true do local v66=0;while true do if (v66==1) then if (v56~=(2 + 0)) then else local v92=0 -0 ;while true do if (v92~=0) then else for v109=1,v61 do local v110=0 -0 ;local v111;local v112;local v113;while true do if (v110==(1859 -(1813 + 46))) then v111=0 + 0 ;v112=nil;v110=1584 -(1321 + 262) ;end if (v110==(2 -1)) then v113=nil;while true do if (v111==0) then v112=v25();v113=nil;v111=1 -0 ;end if (v111~=(2 -1)) then else if (v112==1) then v113=v25()~=(754 -(320 + 434)) ;elseif (v112==2) then v113=v28();elseif (v112~=(8 -5)) then else v113=v29();end v62[v109]=v113;break;end end break;end end end v60[3]=v25();v92=949 -(217 + 731) ;end if (v92~=(769 -(721 + 47))) then else for v114=1401 -(680 + 720) ,v27() do local v115=1723 -(523 + 1200) ;local v116;local v117;while true do if ((1704 -(369 + 1334))==v115) then while true do if (v116==(873 -(470 + 403))) then v117=v25();if (v21(v117,1,1 + 0 )==0) then local v122=0 + 0 ;local v123;local v124;local v125;local v126;local v127;while true do if (v122~=0) then else v123=37 -(8 + 29) ;v124=nil;v122=2 -1 ;end if (v122~=(1 + 1)) then else v127=nil;while true do if (v123~=(1054 -(169 + 884))) then else v126=nil;v127=nil;v123=512 -(447 + 63) ;end if (v123==2) then while true do if (v124==(7 -4)) then if (v21(v126,1 + 2 ,1 + 2 )==(3 -2)) then v127[1393 -(710 + 679) ]=v62[v127[19 -15 ]];end v57[v114]=v127;break;end if (v124~=(0 -0)) then else local v264=738 -(565 + 173) ;local v265;while true do if (v264~=(0 -0)) then else v265=0 -0 ;while true do if (v265==(1 -0)) then v124=1;break;end if ((1684 -(672 + 1012))~=v265) then else local v358=581 -(58 + 523) ;while true do if (v358~=(1615 -(744 + 870))) then else v265=4 -3 ;break;end if (v358~=(0 -0)) then else v125=v21(v117,6 -4 ,3);v126=v21(v117,6 -2 ,3 + 3 );v358=500 -(400 + 99) ;end end end end break;end end end if (v124~=(193 -(53 + 138))) then else local v266=0;while true do if (v266==0) then if (v21(v126,69 -(51 + 17) ,1071 -(224 + 846) )~=(2 -1)) then else v127[1 + 1 ]=v62[v127[2]];end if (v21(v126,2,3 -1 )==(3 -2)) then v127[6 -3 ]=v62[v127[786 -(120 + 663) ]];end v266=1 + 0 ;end if (v266~=1) then else v124=12 -9 ;break;end end end if (v124~=(175 -(86 + 88))) then else v127={v26(),v26(),nil,nil};if (v125==(0 + 0)) then local v297=1317 -(499 + 818) ;local v298;while true do if (v297==(396 -(104 + 292))) then v298=0 -0 ;while true do if (v298==(0 + 0)) then v127[5 -2 ]=v26();v127[4]=v26();break;end end break;end end elseif (v125==1) then v127[2 + 1 ]=v27();elseif (v125==(1 + 1)) then v127[5 -2 ]=v27() -((1940 -(1362 + 576))^(42 -26)) ;elseif (v125==(5 -2)) then local v397=1669 -(782 + 887) ;local v398;while true do if (v397~=(0 -0)) then else v398=0 + 0 ;while true do if (v398==0) then v127[6 -3 ]=v27() -((3 -1)^(14 + 2)) ;v127[4]=v26();break;end end break;end end end v124=2;end end break;end if (v123~=(0 + 0)) then else v124=0;v125=nil;v123=1 + 0 ;end end break;end if (v122==(1 + 0)) then v125=nil;v126=nil;v122=2;end end end break;end end break;end if ((761 -(134 + 627))==v115) then v116=1668 -(1022 + 646) ;v117=nil;v115=2 -1 ;end end end v56=1 + 2 ;break;end end end if (v56~=3) then else for v100=1,v27() do v58[v100-(408 -(402 + 5)) ]=v33();end for v102=1,v27() do v59[v102]=v27();end return v60;end break;end if (0~=v66) then else if (v56~=(0 -0)) then else local v93=1097 -(592 + 505) ;while true do if (v93==0) then v57={};v58={};v93=1 -0 ;end if (v93==(1760 -(1421 + 338))) then v59={};v56=1 + 0 ;break;end end end if (v56==(1415 -(353 + 1061))) then v60={v57,v58,nil,v59};v61=v27();v62={};v56=1 + 1 ;end v66=1139 -(1076 + 62) ;end end end end local function v34(v35,v36,v37)local v63=v35[1];local v64=v35[2];local v65=v35[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (v67==1) then v70={...};v71=v12("#",...) -1 ;v67=2;end if (v67==2) then v72=nil;v72=function()local v82=v63;local v83=v64;local v84=v65;local v85=v32;local v86={};local v87={};local v88={};for v94=0 + 0 ,v71 do if ((v94>=v84) or (((14836 -11328) -(3074 -(27 + 536)))==(1975 -(430 + (683 -527))))) then v86[v94-v84 ]=v70[v94 + (2 -1) ];else v88[v94]=v70[v94 + 1 + 0 ];end end local v89=(v71-v84) + (2 -1) ;local v90;local v91;while true do local v95=0;local v96;while true do if (((570 -259)<=(7375 -3785)) and (v95==(1344 -(552 + 792)))) then v96=0;while true do if ((((19220 -14437) -((1934 -(465 + 1328)) + (1542 -(628 + 567))))>=(1901 -(527 + (1046 -535)))) and ((1 + 0)==v96)) then if (((4176 -2940)<=((2197 -1335) + 2444)) and (v91<=(37 -13))) then if (((3713 -(7 + 666))>(2754 -(333 + 1147))) and (v91<=(30 -19))) then if (((2496 -(233 + 778))>(838 + (498 -(223 + 135)))) and (v91<=((41 -22) -14))) then if (((2091 -(643 + 78))>(470 -(298 + 140))) and (v91<=(1 + 1))) then if (((1141 -746)==((1117 -(362 + 124)) -236)) and (v91<=(0 + 0))) then v88[v90[2 + 0 ]][v90[2 + 1 ]]=v90[1 + 3 ];elseif (((2845 -1219)<((7143 -3340) -((905 -671) + 483))) and (v91==(1 + 0))) then local v166=0 -0 ;local v167;local v168;local v169;while true do if (((2050 -1616)<(2856 -(143 + 138))) and (v166==(4 -3))) then v169=nil;while true do if ((968<=(1077 + 244)) and (v167==(0 -0))) then local v301=0 -(0 -0) ;while true do if ((v301==((3 -2) + 0 + 0)) or (((12723 -9172) + 1427)<=(764 + 47))) then v167=1 + 0 ;break;end if ((v301==(0 -0)) or ((277 -219)>(632 + 4165))) then v168=v90[2 + 1 ];v169=v88[v168];v301=1 + 0 ;end end end if ((v167==(1 -0)) or ((964 + 447)>((5028 + 708) -4250))) then for v326=v168 + (81 -(47 + 33)) ,v90[9 -5 ] do v169=v169   .. v88[v326] ;end v88[v90[3 -1 ]]=v169;break;end end break;end if ((v166==((230 -(72 + 158)) + 0)) or ((1083 + 2658)<=(285 + 2011))) then local v267=0;while true do if ((v267==((1677 -(489 + 1045)) -(11 + 132))) or ((2130 -(258 + (968 -512)))>(4005 -(1440 + 211)))) then v167=0 + 0 ;v168=nil;v267=2 -1 ;end if ((v267==(2 -1)) or ((664 + 1310)<=(460 + 907))) then v166=713 -(199 + 80 + 433) ;break;end end end end elseif (((1931 + 766 + (1459 -(1312 + 100)))<((4089 + 111) -(301 + 196))) and v88[v90[1430 -(90 + 1338) ]]) then v68=v68 + (909 -(122 + 786)) ;else v68=v90[2 + 1 ];end elseif ((v91<=(644 -(5 + 636))) or ((354 + 724)==((599 + 395) -(13 + 639)))) then v88[v90[1 + 1 ]]=v36[v90[13 -10 ]];elseif ((v91>(3 + (1 -0))) or ((68 + 272 + 1116)<(240 + 8))) then v37[v90[(10 -7) + 0 ]]=v88[v90[1 + 1 ]];else local v172=0 -0 ;local v173;local v174;local v175;local v176;local v177;while true do if ((v172==(0 -0)) or ((2658 + 494)>=(5587 -(47 + 45 + 1326)))) then v173=0;v174=nil;v172=1 -(0 + 0) ;end if (((1620 -(517 + 77))==(797 + 229)) and (v172==(2 + 0))) then v177=nil;while true do if ((v173==(2 -0)) or ((12117 -8994)<(996 -(45 + 186)))) then while true do if ((v174==(773 -(584 + 189))) or ((6365 -(1750 + 823))<=(4085 -(126 + 187)))) then local v362=0 -(0 + 0) ;local v363;while true do if ((v362==(704 -(694 + 10))) or (((4985 -2217) + 258)==(2689 -(1094 + 513)))) then v363=0 + 0 ;while true do if ((v363==(1 -0)) or ((68 + 117)==(15727 -(7054 + 4708)))) then v174=(2 -1) + 0 ;break;end if (((1240 + 1417 + 1671)>(6083 -4430)) and (0==v363)) then v175=v90[1 + 0 + 1 ];v176=v88[v175];v363=3 -2 ;end end break;end end end if (((148 + 29 + 146)==(823 -((1119 -652) + 33))) and (v174==((1 + 0) -0))) then v177=v88[v175 + 2 + 0 ];if (((8522 -5118)>(1274 + 1361)) and (v177>(0 + 0))) then if ((v176>v88[v175 + (1948 -(32 + 1915)) ]) or ((1306 + 313)>(4420 -(11 + 78)))) then v68=v90[(860 -(350 + 465)) -(35 + 7) ];else v88[v175 + 3 + 0 ]=v176;end elseif ((v176<v88[v175 + (1 -0) ]) or ((2965 + 1819)==(3601 + 1125))) then v68=v90[768 -(16 + 15 + 734) ];else v88[v175 + 2 + (3 -2) ]=v176;end break;end end break;end if ((v173==(1 -(0 -0))) or ((2342 + 306)>(1843 + (1965 -(22 + 348))))) then v176=nil;v177=nil;v173=486 -(163 + 321) ;end if ((v173==(0 -0)) or ((343 + 60)>(13377 -10609))) then v174=0 -0 ;v175=nil;v173=1184 -(1055 + 128) ;end end break;end if (((77 + (3499 -(1244 + 237)))>=(1837 -(149 + 437))) and (v172==(1 + 0))) then v175=nil;v176=nil;v172=1168 -(477 + 689) ;end end end elseif ((v91<=8) or ((765 + 1010)>4313)) then if ((v91<=(12 -6)) or ((161 + 16)>=(4414 -3094))) then v88[v90[446 -(275 + 169) ]]=v88[v90[1773 -(257 + (1541 -(21 + 7))) ]][v90[1 + 3 ]];elseif (((2299 + 664)<(3930 -(268 + 153))) and (v91==(23 -16))) then local v178=1566 -(346 + 1220) ;local v179;local v180;while true do if ((v178==(0 + 0)) or ((1974 -(50 + 385 + 111))>(1495 + 2086))) then v179=0 -0 ;v180=nil;v178=73 -(68 + 4) ;end if ((((2664 + 256) -(877 + 479))<=(14606 -10309)) and (v178==(704 -(149 + 554)))) then while true do if ((v179==(1772 -(1169 + 603))) or ((11001 -8045)<=(442 + 1405))) then v180=v90[1 + 1 ];v88[v180](v88[v180 + (2 -1) ]);break;end end break;end end else v88[v90[5 -3 ]]=v88[v90[1643 -(347 + 1293) ]];end elseif ((v91<=(256 -(195 + (245 -193)))) or ((2468 -(186 + 12 + 10))>=(6356 -(500 + 78 + 785)))) then local v134=0 -0 ;local v135;local v136;local v137;local v138;local v139;while true do if (((134 + 2185)>(790 + 1043)) and (v134==(3 -2))) then v137=nil;v138=nil;v134=2 + 0 ;end if (((2821 -(1415 + 157))<(4896 -((60 -20) + 37))) and (v134==(90 -(25 + 34 + 29)))) then v139=nil;while true do if (((41 + 12 + 55)<(11621 -7729)) and (v135==(762 -(138 + 622)))) then while true do if ((v136==((4 -2) -1)) or ((687 + 296)<(2358 -(1073 + 625)))) then v139=v90[2 + 1 ];for v350=1300 -(248 + 1051) ,v139 do v138[v350]=v88[v137 + v350 ];end break;end if ((v136==(0 -(0 + 0))) or ((147 + 423)>(5922 -(674 + 475)))) then local v328=1225 -(635 + 590) ;while true do if ((((25298 -15990) -4482)>=(82 -53)) and (v328==((1661 -(965 + 696)) + 0))) then local v385=0;while true do if (((12 + 14)<=(11 + 84)) and (((575 -(552 + 23)) -0)==v385)) then v137=v90[(123 -(13 + 108)) + 0 ];v138=v88[v137];v385=1 + 0 ;end if ((v385==(1 + 0)) or ((11565 -6775)<(6034 -2305))) then v328=1;break;end end end if ((v328==(1 + (0 -0))) or ((1461 -(12 + 150))<=(83 + 182))) then v136=1 + 0 ;break;end end end end break;end if (((1425 -(28 + 87))>=286) and (v135==(182 -(72 + 109)))) then v138=nil;v139=nil;v135=4 -2 ;end if (((7937 -(4710 + 126))>(3008 -(243 + 308))) and (v135==0)) then v136=0 + 0 ;v137=nil;v135=1990 -(574 + 1415) ;end end break;end if (((2039 -(57 + 105))<=(5018 -(804 + 298))) and (v134==(1915 -(1652 + 263)))) then v135=684 -(430 + 254) ;v136=nil;v134=1466 -(1027 + 438) ;end end elseif ((v91==(1748 -(1662 + 76))) or ((5200 -(325 + 585))==(2166 -1626))) then local v183=669 -(406 + 263) ;local v184;local v185;local v186;local v187;local v188;while true do if (((2075 + (4247 -2875))<(5039 -(400 + 387))) and ((0 -0)==v183)) then v184=0 + 0 ;v185=nil;v183=2 -1 ;end if (((2219 -1644)<(9363 -5206)) and (v183==((5 + 1) -4))) then v188=nil;while true do if ((v184==(1 + 0)) or ((2297 -((3871 -2238) + 182))==(1097 -(362 + 36)))) then v187=nil;v188=nil;v184=2 + 0 ;end if ((v184==2) or (3420>=(2443 + (7042 -4720)))) then while true do if (((454 + 3911)>(242 + 2764)) and (v185==(0 -0))) then local v365=(1081 + 235) -(1204 + 112) ;local v366;while true do if (((4907 -(802 + 872))==(5834 -2601)) and (v365==(0 + 0))) then v366=0 -0 ;while true do if (((2731 -(253 + 40))>=(360 + 1141)) and (v366==(2 -1))) then v185=1227 -(605 + (974 -353)) ;break;end if ((v366==(0 -0)) or ((12458 -8536)<(7151 -(17759 -12057)))) then local v426=0;while true do if (((4858 -(798 + 286))<=(5719 -((918 -(810 + 69)) + 860))) and ((115 -(113 + 1))==v426)) then v366=1 -0 ;break;end if ((((8528 -5610) -(704 + 36))>(425 -(189 + 66))) and (v426==(1203 -(522 + 539 + 142)))) then v186=v90[4 -2 ];v187={v88[v186](v88[v186 + (1 -0) ])};v426=1 -0 ;end end end end break;end end end if (((2 -(2 -1))==v185) or ((2674 -788)<(626 -244))) then v188=0 + (0 -0) ;for v386=v186,v90[9 -5 ] do local v387=12 -(9 + 3) ;local v388;while true do if (((1555 + 1580)<(5366 -(384 + 988))) and (v387==(0 + 0))) then v388=0 + 0 ;while true do if (((4224 -3165)==(1810 -(524 + 2 + 225))) and ((1613 -(60 + 1553))==v388)) then v188=v188 + (2 -1) ;v88[v386]=v187[v188];break;end end break;end end end break;end end break;end if (((1390 + 359)>227) and (v184==(543 -(39 + 504)))) then local v304=0 -(0 + 0) ;while true do if ((v304==(0 + 0)) or ((1812 -(47 + 310))>=(4828 -(323 + 341)))) then v185=0 -0 ;v186=nil;v304=(9 -7) -1 ;end if ((v304==(2 -1)) or ((4159 -1509)<=(1784 -375))) then v184=1 -0 ;break;end end end end break;end if (((4165 -(551 + 334))<(455 + 3871)) and (v183==(311 -(285 + 25)))) then v186=nil;v187=nil;v183=9 -7 ;end end else local v189=0 + 0 ;local v190;while true do if ((v189==(0 + 0)) or ((616 -(372 + 24))<(1458 -(279 + 971)))) then v190=v90[1 + 1 ];v88[v190](v13(v88,v190 + (209 -(69 + 139)) ,v90[1099 -(661 + 435) ]));break;end end end elseif ((588<=(3307 -(411 + 687))) and (v91<=(1022 -(603 + (728 -(42 + 284)))))) then if ((v91<=(85 -(65 + (897 -(615 + 276))))) or ((5703 -2414)<(61 -14))) then if ((v91<=(1977 -(45 + 1920))) or ((5644 -(985 + (284 -(30 + 246))))<1018)) then v88[v90[1 + 1 ]][v88[v90[2 + 1 ]]]=v90[690 -(24 + 662) ];elseif ((v91>13) or ((1534 + 161)<=(3007 -2094))) then v88[v90[7 -5 ]]= #v88[v90[3 -0 ]];else local v192=(0 -0) -(0 + 0) ;local v193;local v194;local v195;local v196;local v197;local v198;while true do if ((v192==(2 -1)) or (1620>=(5656 -(573 + 1151)))) then v195=nil;v196=nil;v192=7 -5 ;end if ((v192==(5 -3)) or ((10370 -6567)<(3244 -(17 + 150 + (1032 -578))))) then v197=nil;v198=nil;v192=(971 -(304 + 528)) -(65 + 71) ;end if ((v192==(0 + 0)) or ((1540 + 74)<(2056 -(125 + 1332)))) then v193=0 + 0 ;v194=nil;v192=1 + 0 ;end if ((v192==(910 -(420 + 487))) or ((1516 + 1314)<2078)) then while true do if ((2889<(4860 -(1494 + 22 + 17))) and (v193==(2 -(1 + 0)))) then local v305=0 + 0 ;while true do if ((v305==(0 -0)) or ((12221 -8120)==(1942 -(779 + 359)))) then v196=nil;v197=nil;v305=1870 -(597 + 1272) ;end if (((1 + 0)==v305) or (((2502 + 833) -(116 + 1382))<(856 -(65 + 368)))) then v193=1 + 1 ;break;end end end if ((((2510 -(10 + 215)) + 349)<=(4595 -(133 + 979))) and (v193==(0 -0))) then v194=0 -0 ;v195=nil;v193=1 + 0 ;end if (((2617 -(25 + 766))<(4514 -1593)) and (v193==((657 -408) -(21 + 132 + 94)))) then v198=nil;while true do if (((5569 -3886)==(1834 -((1555 -(1342 + 88)) + 26))) and (v194==(0 -0))) then local v367=0 + 0 ;local v368;while true do if (((200 + (804 -(106 + 29)))<=(1490 + 2773)) and (v367==(0 + 0))) then v368=188 -(120 + 68) ;while true do if ((((412 -323) -(83 + 5))==v368) or ((10251 -5533)<=(209 + 1817))) then v194=176 -(57 + 118) ;break;end if ((v368==(0 -(0 + 0))) or ((2328 + 1503)==(4654 -3301))) then v195=v90[1 + 1 ];v196,v197=v85(v88[v195](v13(v88,v195 + 1 + 0 + (0 -0) ,v90[3])));v368=1 + 0 ;end end break;end end end if (((11394 -6427)>=(758 + 2280)) and (v194==(1 + 0))) then local v369=0 -(1862 -(784 + 1078)) ;local v370;while true do if (((4482 -2209)==(3559 -(1020 + 266))) and (v369==(0 + 0 + 0))) then v370=30 -(10 + (54 -34)) ;while true do if (((3660 -(304 + 492))>((3113 -(618 + 1009)) -(182 + 252 + 29))) and (v370==(2 -1))) then v194=2 + 0 ;break;end if (((10080 -6920)>(376 + 382)) and (v370==(0 + 0))) then v69=(v197 + v195) -((982 -(98 + 883)) + 0) ;v198=0 -0 ;v370=1 -0 ;end end break;end end end if (((1356 -(222 + 71 + 1061))==v194) or ((308 + 1009)==(708 + 682))) then for v389=v195,v69 do local v390=0 -0 ;local v391;while true do if ((v390==(0 + 0)) or ((3536 -(888 + 208))<(4151 -2430))) then v391=0 + 0 + 0 ;while true do if ((v391==(0 + 0 + 0)) or ((4738 -(670 + 439))<1502)) then v198=v198 + 1 ;v88[v389]=v196[v198];break;end end break;end end end break;end end break;end end break;end end end elseif (((3706 -(1452 + 41))>(3031 -2335)) and (v91<=(365 -(119 + 231)))) then local v142=0 -0 ;local v143;local v144;while true do if ((v142==(2 -1)) or (((473 + 88) -328)==(2974 -(225 + 88)))) then for v255=(8 -6) -(1 + 0) , #v87 do local v256=0;local v257;local v258;while true do if (((0 + 0)==v256) or ((1721 + 1712)<(219 + (1609 -1053)))) then v257=0 -0 ;v258=nil;v256=1 + 0 ;end if ((v256==(1 + 0)) or ((2259 + 109)==(4318 -(51 + 15)))) then while true do if (((595 + 3548)>((2475 -(93 + 1750)) -451)) and (v257==(0 -0))) then v258=v87[v255];for v371=0 -0 , #v258 do local v372=448 -(218 + 230) ;local v373;local v374;local v375;local v376;while true do if (((3564 -(449 + 991))>=((7902 -4996) -1863)) and ((1 -0)==v372)) then v375=nil;v376=nil;v372=861 -(55 + 804) ;end if (((4475 -(611 + 44))>=2345) and ((1 + (317 -(44 + 272)))==v372)) then while true do if ((v373==(1848 -(1613 + 235))) or (4716<(2618 + 227))) then local v428=0 -0 ;while true do if ((v428==(0 + 0)) or ((17859 -13254)<(731 + 262 + 1329))) then v374=v258[v371];v375=v374[1 -0 ];v428=1529 -(845 + 683) ;end if ((v428==(1348 -(1096 + 251))) or (3247>(9146 -4453))) then v373=4 -3 ;break;end end end if ((v373==(1 + 0)) or ((3581 + 1011 + 317)==(7071 -3329))) then v376=v374[1 + 1 ];if (((335 + 1038)<=(5902 -3096)) and (v375==v88) and (v376>=v143)) then local v436=0 + 0 ;local v437;while true do if ((v436==(413 -(268 + 145))) or (((1003 + 3940) -3441)==(3874 -(864 + 165)))) then v437=0 -(1281 -(377 + 904)) ;while true do if ((v437==(0 -0)) or ((762 + 3141)<(3963 -(52 + 248)))) then v144[v376]=v375[v376];v374[1 + 0 ]=v144;break;end end break;end end end break;end end break;end if ((4283<(1860 + (4679 -(709 + 1156)))) and (v372==(0 + 0))) then v373=1501 -(739 + 762) ;v374=nil;v372=1 + 0 ;end end end break;end end break;end end end break;end if (((1519 -(162 + 550))<(2306 -(619 + 160))) and ((0 + 0)==v142)) then local v253=0 -0 ;while true do if ((v253==(1554 -(989 + 564))) or ((12492 -8313)<=(165 + 2325))) then v142=1 + 0 ;break;end if (((1561 + 376)<(22558 -17794)) and (v253==(0 + 0))) then v143=v90[1 + 1 ];v144={};v253=(3057 -(1902 + 46)) -(958 + 150) ;end end end end elseif ((v91==(410 -(127 + 267))) or ((4031 -(702 + 900))==(1640 + 3330))) then if (((10914 -8512)<=(7411 -(5014 -(81 + 2)))) and (v88[v90[2]]==v90[1807 -(1110 + 693) ])) then v68=v68 + (192 -(108 + 83)) ;else v68=v90[8 -5 ];end else do return;end end elseif ((v91<=(5 + 15)) or (3403<=(7 + 82))) then if ((v91<=(88 -70)) or ((9659 -6351)>=(9891 -5499))) then v88[v90[1 + 1 ]]=v34(v83[v90[4 -1 ]],nil,v37);elseif ((v91==(51 -32)) or (((2304 -(141 + 169)) + 451)<=(2193 -931))) then v88[v90[1295 -(1288 + 5) ]][v90[(385 + 390) -(348 + 278 + 146) ]]=v88[v90[9 -5 ]];else local v201=1946 -(74 + 498 + 1374) ;local v202;local v203;local v204;while true do if (((8879 -4654)>(15095 -11754)) and (v201==((0 + 0) -0))) then v202=(1362 -735) -(30 + 597) ;v203=nil;v201=(4 -1) -(5 -3) ;end if ((v201==(457 -(302 + 154))) or ((6827 -2338)<=(9211 -6096))) then v204=nil;while true do if ((v202==(0 -0)) or ((659 + 891 + 651)<=(2094 -((1870 -990) + 1058)))) then v203=0 + 0 ;v204=nil;v202=1 -0 ;end if ((v202==(1 + 0)) or ((2629 + 754)<=(1092 -776))) then while true do if (((2734 -((1276 -(497 + 772)) + 1171))<=(5356 -2907)) and ((0 + 0)==v203)) then v204=v90[8 -6 ];v88[v204]=v88[v204](v13(v88,v204 + (1105 -(543 + 561)) ,v69));break;end end break;end end break;end end end elseif (((6457 -3041)>(2812 -(1102 + 205))) and (v91<=(18 + 4))) then if ((v91==(30 -(902 -(93 + 800)))) or ((8027 -5155)==(1548 + 272))) then if ( not v88[v90[979 -(773 + 204) ]] or (4490<(3034 -(75 + 70)))) then v68=v68 + (1 -0) ;else v68=v90[1075 -(883 + 189) ];end else v88[v90[1212 -(551 + 659) ]]=v90[5 -2 ];end elseif ((v91==23) or ((1758 + 2596)<(3111 -(696 + 186)))) then local v207=0 -0 ;local v208;local v209;while true do if ((v207==(3 -2)) or ((2534 -(575 + 1311))==(786 -528))) then while true do if (((3436 -1961)<=(8848 -5872)) and (v208==(876 -(526 + 350)))) then v209=v90[2];v88[v209]=v88[v209](v13(v88,v209 + 1 + 0 ,v90[8 -5 ]));break;end end break;end if (((408 + 3945)<((4262 -1070) + 1290)) and (v207==(0 + 0))) then local v269=936 -(645 + 291) ;while true do if ((v269==((6800 -5220) -(363 + 1217))) or (2918>=(9799 -5574))) then v208=1293 -(604 + 689) ;v209=nil;v269=1 + 0 ;end if ((v269==(741 -(48 + 692))) or ((4501 -(529 + 174))<=(6366 -3439))) then v207=2 -1 ;break;end end end end else v36[v90[1 + 2 ]]=v88[v90[1 + 1 ]];end elseif ((v91<=(18 + 18)) or ((9076 -4263)<(849 + 237))) then if ((v91<=(327 -(169 + 128))) or ((1301 -907)==(1044 + 1644))) then if ((v91<=(76 -49)) or ((16711 -13159)==(5612 -(462 + 264)))) then if (((102 + 727)==((2719 -669) -(760 + 461))) and (v91<=(25 + (1507 -(1386 + 121))))) then local v146=526 -(23 + 503) ;local v147;local v148;while true do if ((v146==(877 -(270 + 606))) or ((4476 -(1199 + 459))==(12146 -7550))) then while true do if (((3246 -(79 + 245))>=(4 -2)) and (v147==(0 -(0 + 0)))) then v148=v90[2];v88[v148](v13(v88,v148 + (1 -(0 -0)) ,v69));break;end end break;end if (((23 + 3273)==(2314 + 982)) and (v146==(1425 -(177 + 1248)))) then v147=0 -0 ;v148=nil;v146=1240 -(564 + 129 + 546) ;end end elseif ((v91==(84 -58)) or ((2636 -(1436 + 201))>((3291 + 1377) -1186))) then v88[v90[1253 -(335 + 916) ]]=v88[v90[9 -6 ]] -v90[(2983 -(1234 + 298)) -(1028 + 419) ] ;else v88[v90[(2 -0) -0 ]]();end elseif ((v91<=(2 + 26)) or ((3036 -((514 -(156 + 27)) + 1493))>=(20688 -16370))) then for v164=v90[2 + 0 ],v90[(191 + 1185) -(294 + 1079) ] do v88[v164]=nil;end elseif ((v91==(57 -28)) or ((128 + 1778)>(764 + 3099))) then if ((v88[v90[2 -0 ]]==v88[v90[6 -2 ]]) or ((4704 -(188 + 465))==(1720 + 1448))) then v68=v68 + 1 + 0 + 0 ;else v68=v90[11 -8 ];end else v88[v90[333 -(202 + 129) ]][v88[v90[(1872 -(436 + 786)) -(81 + 566) ]]]=v88[v90[3 + 1 ]];end elseif ((((370 + 2914) -(207 + 619 + 255))>=(322 + 103)) and (v91<=(1987 -(103 + 1851)))) then if (((7639 -2654)==(10709 -5724)) and (v91<=(1693 -(390 + 1272)))) then v68=v90[3 + 0 ];elseif ((v91>(4 + 28)) or ((209 -(252 -127))>(1857 -(306 + 820)))) then local v215=694 -(412 + 282) ;local v216;local v217;local v218;while true do if ((((17477 -6428) -6240)>=(3958 -1469)) and (v215==(3 -2))) then v218=nil;while true do if ((v216==(0 -0)) or ((3728 -1642)==(1731 -(377 + 917)))) then local v308=0 -0 ;while true do if ((v308==(1906 -(39 + 1867))) or ((2656 + 1061)<(6477 -3970))) then v217=v90[15 -(8 + 5) ];v218=v88[v90[(155 -(53 + 89)) -10 ]];v308=1 -0 ;end if (((4391 -2307)<=((214 -106) + (17349 -12668))) and (v308==(1 -0))) then v216=4 -3 ;break;end end end if ((v216==((2 -1) + 0)) or ((6849 -3082)==((25 -11) + 125))) then v88[v217 + (1037 -(882 + 154)) ]=v218;v88[v217]=v218[v90[238 -(107 + 127) ]];break;end end break;end if ((v215==(0 + 0)) or ((2020 + (2350 -(1491 + 272)))<((756 -218) -((1704 -(233 + 1315)) + 71)))) then v216=0 + 0 ;v217=nil;v215=1 -0 ;end end else local v219=0 -0 ;local v220;local v221;local v222;while true do if (((0 + 0)==v219) or ((5989 -2881)<((776 + 4384) -3113))) then local v270=0 + 0 ;while true do if (((129 + 265)<=(1536 + 1255 + 308)) and (v270==(1481 -((360 -(13 + 233)) + 1367)))) then v220=v90[297 -(270 + 25) ];v221=v88[v220 + (1471 -(246 + 1223)) ];v270=1 + (0 -0) ;end if (((2448 + 138 + 1243)>(1467 + 1994)) and (v270==(1 + (370 -(35 + 335))))) then v219=1 + 0 ;break;end end end if (((668 + 1271)>=(8 + 1168)) and (v219==(1 -0))) then v222=v88[v220] + v221 ;v88[v220]=v222;v219=1 + 1 ;end if ((v219==(6 -4)) or ((3325 -(48 + 388))>=(522 + 215 + 3129))) then if ((v221>(0 + 0)) or ((787 + 649)>=(2217 + 1037))) then if (((401 + 286)<=(12136 -9283)) and (v222<=v88[v220 + (1 -0) ])) then local v329=0 -0 ;local v330;while true do if (((0 + 0)==v329) or ((2256 -(132 + 206))<(2343 -(960 + 465)))) then v330=0 -0 ;while true do if (((2088 -(4011 -2432))==(73 + 436)) and (v330==(0 -0))) then v68=v90[1 + 2 ];v88[v220 + (1928 -(957 + 968)) ]=v222;break;end end break;end end end elseif ((v222>=v88[v220 + (3 -2) ]) or ((854 + (1449 -414))>=(11500 -7275))) then local v331=0 -(0 -0) ;local v332;while true do if ((v331==(0 + 0)) or ((4112 + 26)<(898 + 1126))) then v332=0 -0 ;while true do if ((((10862 + 5370) -11725)==(9213 -4706)) and (v332==(0 + 0))) then v68=v90[17 -(7 + 7) ];v88[v220 + (1060 -(1054 + 3)) ]=v222;break;end end break;end end end break;end end end elseif (((3342 -((3232 -(797 + 977)) + 235))<(10946 -7263)) and (v91<=34)) then local v150=(0 -0) + 0 ;local v151;local v152;local v153;while true do if (((10524 -(21553 -14392))>=((7014 -5128) -1205)) and (v150==(2 -1))) then v153=nil;while true do if (((1537 -(9 + 13))>(37 + (531 -221))) and (v151==(1 + 0))) then for v299=v152 + (1 -0) ,v90[(256 -(175 + 73)) -5 ] do v7(v153,v88[v299]);end break;end if ((((1689 -(140 + 1288)) + (943 -342))>(2058 -(545 + 763))) and (v151==((1677 -(1029 + 648)) -0))) then local v284=(0 + 0) -0 ;while true do if (((1459 + 2161)==(7866 -4246)) and (v284==(36 -(11 + 24)))) then v151=2 -1 ;break;end if ((v284==(0 -(0 + 0))) or ((1251 + 2740)<(45 + 2566 + 217))) then v152=v90[1 + 1 ];v153=v88[v152];v284=1288 -(368 + 919) ;end end end end break;end if ((v150==(0 -0)) or ((4628 -(516 + 21))==(266 + 705))) then v151=0 -0 ;v152=nil;v150=1 -(0 -0) ;end end elseif ((v91==35) or ((2425 -(482 + 53))<(830 -(38 + 474)))) then if ((3642>(338 + 1019)) and (v90[1054 -(960 + 92) ]==v88[v90[3 + 1 ]])) then v68=v68 + (689 -(276 + 412)) + 0 ;else v68=v90[6 -3 ];end else v88[v90[(2313 -1664) -(386 + 261) ]]=v88[v90[2 + (2 -1) ]]/v90[1 + (1365 -(55 + 1307)) ] ;end elseif ((v91<=(38 + 4)) or ((2040 + 992)>=(9721 -(6784 -(1287 + 359))))) then if ((v91<=(122 -83)) or ((60 -44)>=(9788 -6085))) then if (((3631 -953)==(3006 -(179 + 149))) and (v91<=(128 -91))) then v88[v90[2 + 0 ]]={};elseif (((4203 -1594)>(904 -(30 + 156 + 299))) and (v91>(136 -98))) then v88[v90[886 -(683 + 201) ]]=v88[v90[2 + 1 ]][v88[v90[2 + 2 ]]];else local v226=0;local v227;local v228;local v229;local v230;local v231;local v232;while true do if ((((216 + 1481) -756)<=(2480 + 71)) and (v226==(0 -0))) then v227=0 + 0 ;v228=nil;v226=1154 -((1890 -814) + 77) ;end if ((v226==(4 -2)) or ((1984 -1125)>1746)) then v231=nil;v232=nil;v226=8 -5 ;end if (((1997 + 1085 + 826)>(763 -421)) and (v226==(2 + 1))) then while true do if ((v227==(1275 -(1146 + 126))) or ((2597 -(280 + 552))<=(1665 -(826 + 397)))) then if (v232 or (((5904 -(260 + 170)) -3986)==(2549 -(568 + 402)))) then local v354=560 -(379 + 181) ;local v355;while true do if (((5645 -(661 + 775))>(1911 -1021)) and (v354==(964 -(3 + 747 + 214)))) then v355=0 -0 ;while true do if ((v355==(0 -0)) or ((3547 + 49)<=(4750 -1718))) then v88[v230]=v232;v68=v90[404 -(105 + 296) ];break;end end break;end end else v68=v68 + (2 -1) ;end break;end if ((v227==(9 -7)) or ((7479 -5941)>=((2627 -(837 + 844)) + 711))) then local v314=(0 + 0) -(0 -0) ;while true do if (((8405 -4983)<(1541 + 2971)) and ((0 -0)==v314)) then local v381=0 -(546 -(261 + 285)) ;while true do if (((3663 + 806)>=(2007 -(74 + 241))) and (v381==(1842 -((2156 -1490) + 1176)))) then for v414=2 -1 ,v229 do v88[v230 + v414 ]=v231[v414];end v232=v231[1 + 0 ];v381=1 + 0 ;end if (((4743 -(89 + 325 + 499))<=(4922 -(171 + 511))) and ((1 + 0)==v381)) then v314=753 -(355 + 397) ;break;end end end if (((1764 + 87)>(2115 -1248)) and (v314==(1 + (0 -0)))) then v227=1836 -(1611 + 222) ;break;end end end if (((1662 -(1183 + 243))>(265 -162)) and (v227==(0 -0))) then local v315=0 -0 ;local v316;while true do if ((v315==(1333 -(1200 + 133))) or (((4396 -(839 + 174)) -(936 + (460 -305)))==(4909 -(418 + 56)))) then v316=1143 -(583 + 560) ;while true do if (((1611 -(958 -(6 + 8)))<=(1636 -(172 + 205))) and (v316==(1203 -(944 + 259)))) then v228=v90[(803 -(607 + 193)) -1 ];v229=v90[12 -8 ];v316=1 + 0 ;end if ((v316==(1 + 0)) or ((640 -(232 + (249 -(144 + 88))))>=(1780 -(1149 -(297 + 32))))) then v227=1 + 0 ;break;end end break;end end end if ((((5766 -(587 + 19)) -1747)>(10693 -(2630 + 5179))) and (v227==(1 + 0))) then local v317=0 -0 ;while true do if ((v317==(845 -(429 + 416))) or ((18183 -14016)<(10997 -7566))) then local v382=16 -(12 + 4) ;while true do if (((595 + 2410)>(557 + 951)) and (v382==(3 -2))) then v317=1 + 0 ;break;end if ((((2716 + 1373) -(4880 -3447))>(2751 -(243 + 958))) and (v382==(0 -0))) then v230=v228 + 1 + 1 ;v231={v88[v228](v88[v228 + 1 + 0 ],v88[v230])};v382=(1061 -(110 + 950)) + 0 ;end end end if ((v317==(1505 -(118 + 1386))) or ((3295 -(198 + 619))<=(1359 + 616))) then v227=2 + 0 + 0 ;break;end end end end break;end if (((2760 -(831 + 939))<=(6139 -(974 + 940))) and (v226==(1 + 0))) then local v272=0 -0 ;while true do if ((v272==(179 -(139 + 40))) or ((2932 -(692 + (1566 -509)))==(959 -(7 + 104)))) then v229=nil;v230=nil;v272=507 -(348 + 158) ;end if (((932 + 1704)>(88 + 2400)) and ((1 + 0)==v272)) then v226=2;break;end end end end end elseif (((2558 -1647)<(6117 -4365)) and (v91<=((2309 -(769 + 426)) -(948 + 126)))) then local v155=732 -(282 + 450) ;local v156;local v157;local v158;local v159;while true do if ((v155==(1 + 1)) or ((4952 -2142)>((5732 + 428) -3002))) then while true do if ((v156==(1530 -(558 + 972))) or ((3344 -2027)<(2804 -(1384 + 612)))) then v157=423 -(176 + 247) ;v158=nil;v156=(1933 -(1072 + 859)) -1 ;end if ((v156==(1809 -(1761 + 47))) or (((2049 -(314 + 1441)) + 3111)>(3336 + 1638))) then v159=nil;while true do if ((v157==(942 -(208 + 733))) or ((792 -((959 -(201 + 663)) + 34))>1253)) then v88[v158 + 1 + 0 ]=v159;v88[v158]=v159[v88[v90[160 -(148 + 8) ]]];break;end if (((0 -0)==v157) or ((2057 -(21 + 409))==(3839 -(174 + 328)))) then local v338=0 + 0 ;local v339;while true do if ((v338==(0 + 0)) or ((1309 -(652 + 171))>(367 + 1133))) then v339=0 + 0 + 0 ;while true do if ((3221==((8423 -5010) -((1444 -(32 + 1376)) + 156))) and (v339==0)) then v158=v90[5 -3 ];v159=v88[v90[8 -5 ]];v339=1 + 0 ;end if ((v339==(2 -1)) or ((5853 -(782 + 127 + 467))==(4147 -(644 + 591)))) then v157=867 -(839 + 7 + 20) ;break;end end break;end end end end break;end end break;end if ((4083>(2010 + 753)) and (v155==(1777 -(1015 + 761)))) then v158=nil;v159=nil;v155=2 + 0 + 0 ;end if ((v155==(0 + 0)) or ((2430 -(63 + 1231))<(289 + 53))) then v156=0;v157=nil;v155=1 -0 ;end end elseif ((v91==(19 + 22)) or ((11648 -7589)<=(4056 -((2432 -1719) + 568)))) then local v233=0 -0 ;local v234;while true do if ((((2349 + 1250) -(7284 -4906))<=(2258 -((383 -297) + (353 -244)))) and (v233==(0 -0))) then v234=v90[(1906 -(248 + 245)) -(755 + 656) ];v88[v234]=v88[v234]();break;end end else v88[v90[8 -6 ]]=v37[v90[290 -(218 + 69) ]];end elseif (((1030 + (3249 -(1121 + 523)))>(1707 -((596 -(12 + 366)) + 192))) and (v91<=(1691 -(710 + 936)))) then if (((3300 -(1878 + 2))>(1604 -714)) and (v91<=(132 -89))) then local v160=0 -0 ;local v161;local v162;local v163;while true do if ((v160==(0 + 0)) or ((1699 + 547)>(60 + 4552))) then v161=0 -0 ;v162=nil;v160=1 + 0 ;end if (((904 + 2464)<(320 + 4104)) and (v160==(1 + (0 -0)))) then v163=nil;while true do if (((3389 -(217 + 906))==(3506 -(1231 + 9))) and (v161==1)) then while true do if ((v162==(1067 -(95 + 439 + 533))) or ((13571 -10334)<(1127 + 607))) then v163=v90[107 -(91 + 14) ];do return v13(v88,v163,v163 + v90[8 -5 ] );end break;end end break;end if (((0 -0)==v161) or ((23780 -18839)==(8501 -(11175 -5795)))) then local v285=0 + 0 ;while true do if ((v285==(1 + 0)) or ((127 + 407)>(4931 -(199 + 357)))) then v161=2 -1 ;break;end if (((7866 -5500)<(4902 -(167 + 1232 + 42))) and (v285==(0 -0))) then v162=0 -0 ;v163=nil;v285=4 -3 ;end end end end break;end end elseif (((3025 -(877 + 895))<(1714 + 924)) and (v91>(36 + 8))) then local v237=529 -(15 + 514) ;local v238;local v239;local v240;while true do if (((3768 + 233)>(3677 -(69 + 292))) and (v237==(1 + 0))) then v240={};v239=v10({},{__index=function(v275,v276)local v286=1036 -(27 + 1009) ;local v287;local v288;while true do if (((4811 -(41 + 90 + 583))>((10220 -6178) -1697)) and (v286==(0 + 0))) then v287=0 + 0 ;v288=nil;v286=476 -(17 + (1910 -1452)) ;end if ((v286==(1660 -(839 + 820))) or ((5361 -3285)>(1568 + 592))) then while true do if (((45 + 2429)<(4205 -(395 + 64))) and (v287==(0 + 0))) then local v392=0 -0 ;while true do if (((2737 -(1204 + 251 + 68))<=(9887 -7260)) and (v392==(88 -(68 + 20)))) then v288=v240[v276];return v288[2 -1 ][v288[7 -5 ]];end end end end break;end end end,__newindex=function(v275,v276,v277)local v289=0 + 0 ;local v290;local v291;while true do if (((146 + 265)==(709 -298)) and ((0 -(1570 -(686 + 884)))==v289)) then v290=1148 -(199 + 949) ;v291=nil;v289=1 -0 ;end if (((10201 -5249)>((8899 -3609) -(41 + 823))) and (v289==(1459 -(1195 + 263)))) then while true do if ((v290==0) or ((1856 + 638)<(4100 -2149))) then v291=v240[v276];v291[(2614 -(991 + 261)) -(217 + 1144) ][v291[1 + 1 ]]=v277;break;end end break;end end end});v237=1 + (2 -1) ;end if ((v237==(0 + 0 + 0)) or ((3030 + 1596)<(1038 + 76))) then local v278=0 + 0 ;while true do if (((0 -0)==v278) or ((18646 -13953)<(662 + 2674))) then v238=v83[v90[4 -1 ]];v239=nil;v278=2 -1 ;end if ((v278==(1 + 0)) or ((532 + 565)>(1568 + 203))) then v237=2 -1 ;break;end end end if (((13172 -9452)>=(430 + 2621)) and ((2 + 0)==v237)) then for v292=1 -0 ,v90[4] do local v293=0 -(0 + 0) ;local v294;while true do if ((v293==((1 + 0) -0)) or ((2557 -(644 + 550))<=(1980 -(4437 -2956)))) then if (((1929 + 1496)<=4031) and (v294[1502 -(149 + 125 + 1227) ]==(37 -29))) then v240[v292-(1 + 0) ]={v88,v294[2 + 1 ]};else v240[v292-(1 + 0) ]={v36,v294[3 + 0 ]};end v87[ #v87 + 1 + 0 ]=v240;break;end if ((3968==(2078 + 1890)) and (v293==(0 -(0 + 0)))) then v68=v68 + (1 -0) ;v294=v82[v68];v293=3 -2 ;end end end v88[v90[5 -3 ]]=v34(v238,v239,v37);break;end end else local v241=0 + (0 -0) ;local v242;local v243;while true do if (((1 + 0)==v241) or ((5100 -(950 + 659))==(2451 -1780))) then while true do if ((v242==(0 + 0)) or ((5276 -(1272 + 228))<=(575 + (1625 -1173)))) then v243=v90[1 + 1 ];v88[v243]=v88[v243](v88[v243 + (2 -1) ]);break;end end break;end if ((v241==(299 -(57 + 242))) or ((2881 -(86 + 406))<=((2921 -1511) -(197 + (1823 -(1352 + 376)))))) then v242=(11 + 1749) -(742 + 1018) ;v243=nil;v241=1 -0 ;end end end elseif (((3402 + 738)>=(2801 + 689)) and (v91<=(986 -(605 + 334)))) then if ((v91==(142 -96)) or ((4279 -(356 + 1385))>((15366 -(350 + 1564)) -9889))) then do return v88[v90[1067 -(1043 + 22) ]];end else local v244=0 -0 ;local v245;local v246;local v247;local v248;local v249;while true do if ((v244==(1621 -(187 + 43 + 1391))) or ((12401 -9715)>(4875 -(4 + 7)))) then local v280=0 -0 ;while true do if (((1597 + 142)<(3457 -1717)) and (v280==(0 -(0 -0)))) then v245=0 -0 ;v246=nil;v280=(1267 -864) -(241 + 161) ;end if (((5100 -1194)==(1076 + 2830)) and (v280==(973 -(64 + 104 + 804)))) then v244=(1 + 2) -2 ;break;end end end if (((2 -1)==v244) or ((1622 -(757 + 44))>((1066 -(9 + 38)) + 1805))) then v247=nil;v248=nil;v244=4 -2 ;end if ((v244==(2 + 0)) or ((2608 -(775 + 79))>(4229 -(330 + 476)))) then v249=nil;while true do if ((v245==(4 -3)) or ((9348 -5092)==(3171 -(964 + 329)))) then local v321=0 + 0 ;local v322;while true do if ((v321==0) or ((3163 -(374 + 715))>=(3791 + 1115))) then v322=0 -0 ;while true do if ((v322==(1 + 0)) or ((121 + 41)>=(8189 -3363))) then v245=1406 -(1095 + 309) ;break;end if ((v322==(0 + 0)) or ((7796 -2868)<=(1460 + (2211 -1633)))) then local v402=0 + 0 ;while true do if (((5020 -(830 + 165))>(732 -583)) and (v402==(0 -(0 + 0)))) then v69=(v248 + v246) -((1 + 0) -0) ;v249=0 + 0 ;v402=(2 -1) + 0 ;end if (((2146 -1564)<=((7088 -(992 + 63)) -4354)) and (v402==(1391 -(1273 + 117)))) then v322=1004 -(667 + 336) ;break;end end end end break;end end end if ((v245==(1 + 1)) or ((12937 -9960)>(11605 -7082))) then for v343=v246,v69 do local v344=0 -0 ;local v345;while true do if ((((9248 -4190) -(744 + 769))<=(4939 -(79 + 146 + 925))) and (v344==(1231 -(348 + 883)))) then v345=0 -0 ;while true do if (((0 -0)==v345) or ((3249 -(551 + 642))>=(5195 -1945))) then v249=v249 + (35 -(15 + 19)) + 0 ;v88[v343]=v247[v249];break;end end break;end end end break;end if (((5262 -((882 -(54 + 237)) + 508))>(1744 -(302 + (1058 -537)))) and (v245==(0 -0))) then local v323=355 -(98 + 257) ;local v324;while true do if (((13000 -9118)>=(3694 -(80 + 1385))) and (v323==(0 -0))) then v324=0 + 0 ;while true do if (((9903 -(18526 -11666))<((38512 -21792) -13056)) and (v324==(1 + 0))) then v245=1 + 0 ;break;end if (((700 -(257 + 443))==v324) or (((360 + 1408) -(582 + 523 + 491))>(204 + 3))) then v246=v90[810 -(520 + 288) ];v247,v248=v85(v88[v246](v88[v246 + (1282 -(641 + (2544 -(1644 + 260)))) ]));v324=927 -(176 + 750) ;end end break;end end end end break;end end end elseif (((6949 -(2230 + 447))>=(259 + 75)) and (v91==(1429 -(473 + 908)))) then v88[v90[2]]=v90[5 -2 ]~=(0 -0) ;else local v251=0 + 0 ;local v252;while true do if (((8465 -4734)<=(11060 -6744)) and (v251==(0 -0))) then v252=v88[v90[6 -2 ]];if (((650 + 1679)<=(6201 -(1342 + 430))) and  not v252) then v68=v68 + (699 -(427 + 271)) ;else local v300=0 -0 ;while true do if (((3126 -1691)>(1234 -(215 + 31))) and (v300==(0 + 0))) then v88[v90[1 + 1 ]]=v252;v68=v90[1 + 2 ];break;end end end break;end end end v68=v68 + (664 -(395 + 268)) ;break;end if (((6862 -(722 + 2039))>(151 + 1580 + 1280)) and (v96==(0 + 0))) then local v118=0 -0 ;while true do if (((8919 -4487)>(3049 + 988)) and (v118==(1 + (0 -0)))) then v96=1133 -(958 + 174) ;break;end if (((13800 -10072)>(1813 -(1072 + 25))) and (v118==(0 + 0))) then v90=v82[v68];v91=v90[929 -(679 + 249) ];v118=2 -1 ;end end end end break;end end end end;v67=3;end if (v67==0) then v68=1;v69= -1;v67=1;end if (v67==3) then A,B=v32(v11(v72));if  not A[1] then local v97=0;local v98;while true do if (v97==0) then v98=v35[4][v68] or "?" ;error("Script error at ["   .. v98   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
